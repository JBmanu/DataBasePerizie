#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElaboratoDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Teleperizia")]
	public partial class TeleperiziaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertAssicurati(Assicurati instance);
    partial void UpdateAssicurati(Assicurati instance);
    partial void DeleteAssicurati(Assicurati instance);
    partial void InsertVideo_Perizie(Video_Perizie instance);
    partial void UpdateVideo_Perizie(Video_Perizie instance);
    partial void DeleteVideo_Perizie(Video_Perizie instance);
    partial void InsertAssicurazioni(Assicurazioni instance);
    partial void UpdateAssicurazioni(Assicurazioni instance);
    partial void DeleteAssicurazioni(Assicurazioni instance);
    partial void InsertCategoria_Sinistri(Categoria_Sinistri instance);
    partial void UpdateCategoria_Sinistri(Categoria_Sinistri instance);
    partial void DeleteCategoria_Sinistri(Categoria_Sinistri instance);
    partial void InsertDocumenti(Documenti instance);
    partial void UpdateDocumenti(Documenti instance);
    partial void DeleteDocumenti(Documenti instance);
    partial void InsertIncarichi(Incarichi instance);
    partial void UpdateIncarichi(Incarichi instance);
    partial void DeleteIncarichi(Incarichi instance);
    partial void InsertLuoghi(Luoghi instance);
    partial void UpdateLuoghi(Luoghi instance);
    partial void DeleteLuoghi(Luoghi instance);
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertPeriti(Periti instance);
    partial void UpdatePeriti(Periti instance);
    partial void DeletePeriti(Periti instance);
    partial void InsertPolizze(Polizze instance);
    partial void UpdatePolizze(Polizze instance);
    partial void DeletePolizze(Polizze instance);
    partial void InsertSinistri(Sinistri instance);
    partial void UpdateSinistri(Sinistri instance);
    partial void DeleteSinistri(Sinistri instance);
    partial void InsertStudi_Peritali(Studi_Peritali instance);
    partial void UpdateStudi_Peritali(Studi_Peritali instance);
    partial void DeleteStudi_Peritali(Studi_Peritali instance);
    partial void InsertSupervisori(Supervisori instance);
    partial void UpdateSupervisori(Supervisori instance);
    partial void DeleteSupervisori(Supervisori instance);
    partial void InsertTipo_Polizze(Tipo_Polizze instance);
    partial void UpdateTipo_Polizze(Tipo_Polizze instance);
    partial void DeleteTipo_Polizze(Tipo_Polizze instance);
    #endregion
		
		public TeleperiziaDataContext() : 
				base(global::ElaboratoDB.Properties.Settings.Default.TeleperiziaConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public TeleperiziaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeleperiziaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeleperiziaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TeleperiziaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Assicurati> Assicurati
		{
			get
			{
				return this.GetTable<Assicurati>();
			}
		}
		
		public System.Data.Linq.Table<Video_Perizie> Video_Perizie
		{
			get
			{
				return this.GetTable<Video_Perizie>();
			}
		}
		
		public System.Data.Linq.Table<Assicurazioni> Assicurazioni
		{
			get
			{
				return this.GetTable<Assicurazioni>();
			}
		}
		
		public System.Data.Linq.Table<Categoria_Sinistri> Categoria_Sinistri
		{
			get
			{
				return this.GetTable<Categoria_Sinistri>();
			}
		}
		
		public System.Data.Linq.Table<Documenti> Documenti
		{
			get
			{
				return this.GetTable<Documenti>();
			}
		}
		
		public System.Data.Linq.Table<Incarichi> Incarichi
		{
			get
			{
				return this.GetTable<Incarichi>();
			}
		}
		
		public System.Data.Linq.Table<Luoghi> Luoghi
		{
			get
			{
				return this.GetTable<Luoghi>();
			}
		}
		
		public System.Data.Linq.Table<Media> Media
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<Periti> Periti
		{
			get
			{
				return this.GetTable<Periti>();
			}
		}
		
		public System.Data.Linq.Table<Polizze> Polizze
		{
			get
			{
				return this.GetTable<Polizze>();
			}
		}
		
		public System.Data.Linq.Table<Sinistri> Sinistri
		{
			get
			{
				return this.GetTable<Sinistri>();
			}
		}
		
		public System.Data.Linq.Table<Studi_Peritali> Studi_Peritali
		{
			get
			{
				return this.GetTable<Studi_Peritali>();
			}
		}
		
		public System.Data.Linq.Table<Supervisori> Supervisori
		{
			get
			{
				return this.GetTable<Supervisori>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Polizze> Tipo_Polizze
		{
			get
			{
				return this.GetTable<Tipo_Polizze>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assicurati")]
	public partial class Assicurati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Assicurato;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.Nullable<System.DateTime> _DataNascita;
		
		private string _Email;
		
		private string _CodiceFiscale;
		
		private string _Telefono;
		
		private EntitySet<Polizze> _Polizze;
		
		private EntitySet<Sinistri> _Sinistri;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AssicuratoChanging(int value);
    partial void OnID_AssicuratoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnDataNascitaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascitaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Assicurati()
		{
			this._Polizze = new EntitySet<Polizze>(new Action<Polizze>(this.attach_Polizze), new Action<Polizze>(this.detach_Polizze));
			this._Sinistri = new EntitySet<Sinistri>(new Action<Sinistri>(this.attach_Sinistri), new Action<Sinistri>(this.detach_Sinistri));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Assicurato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Assicurato
		{
			get
			{
				return this._ID_Assicurato;
			}
			set
			{
				if ((this._ID_Assicurato != value))
				{
					this.OnID_AssicuratoChanging(value);
					this.SendPropertyChanging();
					this._ID_Assicurato = value;
					this.SendPropertyChanged("ID_Assicurato");
					this.OnID_AssicuratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date")]
		public System.Nullable<System.DateTime> DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurati_Polizze", Storage="_Polizze", ThisKey="ID_Assicurato", OtherKey="Assicurato")]
		public EntitySet<Polizze> Polizze
		{
			get
			{
				return this._Polizze;
			}
			set
			{
				this._Polizze.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurati_Sinistri", Storage="_Sinistri", ThisKey="ID_Assicurato", OtherKey="Assicurato")]
		public EntitySet<Sinistri> Sinistri
		{
			get
			{
				return this._Sinistri;
			}
			set
			{
				this._Sinistri.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Assicurati = this;
		}
		
		private void detach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Assicurati = null;
		}
		
		private void attach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Assicurati = this;
		}
		
		private void detach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Assicurati = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video_Perizie")]
	public partial class Video_Perizie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroPerizia;
		
		private int _Incarico;
		
		private float _Durata;
		
		private System.DateTime _Data;
		
		private EntitySet<Media> _Media;
		
		private EntityRef<Incarichi> _Incarichi;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroPeriziaChanging(int value);
    partial void OnNumeroPeriziaChanged();
    partial void OnIncaricoChanging(int value);
    partial void OnIncaricoChanged();
    partial void OnDurataChanging(float value);
    partial void OnDurataChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public Video_Perizie()
		{
			this._Media = new EntitySet<Media>(new Action<Media>(this.attach_Media), new Action<Media>(this.detach_Media));
			this._Incarichi = default(EntityRef<Incarichi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPerizia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumeroPerizia
		{
			get
			{
				return this._NumeroPerizia;
			}
			set
			{
				if ((this._NumeroPerizia != value))
				{
					this.OnNumeroPeriziaChanging(value);
					this.SendPropertyChanging();
					this._NumeroPerizia = value;
					this.SendPropertyChanged("NumeroPerizia");
					this.OnNumeroPeriziaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incarico", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Incarico
		{
			get
			{
				return this._Incarico;
			}
			set
			{
				if ((this._Incarico != value))
				{
					if (this._Incarichi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIncaricoChanging(value);
					this.SendPropertyChanging();
					this._Incarico = value;
					this.SendPropertyChanged("Incarico");
					this.OnIncaricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Real NOT NULL")]
		public float Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Perizie_Media", Storage="_Media", ThisKey="NumeroPerizia,Incarico", OtherKey="NumeroPerizia,Incarico")]
		public EntitySet<Media> Media
		{
			get
			{
				return this._Media;
			}
			set
			{
				this._Media.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Incarichi_Video_Perizie", Storage="_Incarichi", ThisKey="Incarico", OtherKey="ID_Incarico", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Incarichi Incarichi
		{
			get
			{
				return this._Incarichi.Entity;
			}
			set
			{
				Incarichi previousValue = this._Incarichi.Entity;
				if (((previousValue != value) 
							|| (this._Incarichi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Incarichi.Entity = null;
						previousValue.Video_Perizie.Remove(this);
					}
					this._Incarichi.Entity = value;
					if ((value != null))
					{
						value.Video_Perizie.Add(this);
						this._Incarico = value.ID_Incarico;
					}
					else
					{
						this._Incarico = default(int);
					}
					this.SendPropertyChanged("Incarichi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Media(Media entity)
		{
			this.SendPropertyChanging();
			entity.Video_Perizie = this;
		}
		
		private void detach_Media(Media entity)
		{
			this.SendPropertyChanging();
			entity.Video_Perizie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assicurazioni")]
	public partial class Assicurazioni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Denominazione;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _NumeroVerde;
		
		private EntitySet<Polizze> _Polizze;
		
		private EntitySet<Sinistri> _Sinistri;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDenominazioneChanging(string value);
    partial void OnDenominazioneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnNumeroVerdeChanging(string value);
    partial void OnNumeroVerdeChanged();
    #endregion
		
		public Assicurazioni()
		{
			this._Polizze = new EntitySet<Polizze>(new Action<Polizze>(this.attach_Polizze), new Action<Polizze>(this.detach_Polizze));
			this._Sinistri = new EntitySet<Sinistri>(new Action<Sinistri>(this.attach_Sinistri), new Action<Sinistri>(this.detach_Sinistri));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominazione", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Denominazione
		{
			get
			{
				return this._Denominazione;
			}
			set
			{
				if ((this._Denominazione != value))
				{
					this.OnDenominazioneChanging(value);
					this.SendPropertyChanging();
					this._Denominazione = value;
					this.SendPropertyChanged("Denominazione");
					this.OnDenominazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroVerde", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NumeroVerde
		{
			get
			{
				return this._NumeroVerde;
			}
			set
			{
				if ((this._NumeroVerde != value))
				{
					this.OnNumeroVerdeChanging(value);
					this.SendPropertyChanging();
					this._NumeroVerde = value;
					this.SendPropertyChanged("NumeroVerde");
					this.OnNumeroVerdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurazioni_Polizze", Storage="_Polizze", ThisKey="Denominazione", OtherKey="Assicurazione")]
		public EntitySet<Polizze> Polizze
		{
			get
			{
				return this._Polizze;
			}
			set
			{
				this._Polizze.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurazioni_Sinistri", Storage="_Sinistri", ThisKey="Denominazione", OtherKey="Assicurazione")]
		public EntitySet<Sinistri> Sinistri
		{
			get
			{
				return this._Sinistri;
			}
			set
			{
				this._Sinistri.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Assicurazioni = this;
		}
		
		private void detach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Assicurazioni = null;
		}
		
		private void attach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Assicurazioni = this;
		}
		
		private void detach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Assicurazioni = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria_Sinistri")]
	public partial class Categoria_Sinistri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Appellativo;
		
		private string _Descrizione;
		
		private EntitySet<Sinistri> _Sinistri;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppellativoChanging(string value);
    partial void OnAppellativoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Categoria_Sinistri()
		{
			this._Sinistri = new EntitySet<Sinistri>(new Action<Sinistri>(this.attach_Sinistri), new Action<Sinistri>(this.detach_Sinistri));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appellativo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Appellativo
		{
			get
			{
				return this._Appellativo;
			}
			set
			{
				if ((this._Appellativo != value))
				{
					this.OnAppellativoChanging(value);
					this.SendPropertyChanging();
					this._Appellativo = value;
					this.SendPropertyChanged("Appellativo");
					this.OnAppellativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Sinistri_Sinistri", Storage="_Sinistri", ThisKey="Appellativo", OtherKey="Categoria")]
		public EntitySet<Sinistri> Sinistri
		{
			get
			{
				return this._Sinistri;
			}
			set
			{
				this._Sinistri.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Categoria_Sinistri = this;
		}
		
		private void detach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Categoria_Sinistri = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documenti")]
	public partial class Documenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Documento;
		
		private string _Nome;
		
		private string _Estensione;
		
		private float _Dimensione;
		
		private string _Directory;
		
		private string _Tipo;
		
		private int _ID_Assicurato;
		
		private int _Incarico;
		
		private EntityRef<Incarichi> _Incarichi;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DocumentoChanging(int value);
    partial void OnID_DocumentoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEstensioneChanging(string value);
    partial void OnEstensioneChanged();
    partial void OnDimensioneChanging(float value);
    partial void OnDimensioneChanged();
    partial void OnDirectoryChanging(string value);
    partial void OnDirectoryChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnID_AssicuratoChanging(int value);
    partial void OnID_AssicuratoChanged();
    partial void OnIncaricoChanging(int value);
    partial void OnIncaricoChanged();
    #endregion
		
		public Documenti()
		{
			this._Incarichi = default(EntityRef<Incarichi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Documento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Documento
		{
			get
			{
				return this._ID_Documento;
			}
			set
			{
				if ((this._ID_Documento != value))
				{
					this.OnID_DocumentoChanging(value);
					this.SendPropertyChanging();
					this._ID_Documento = value;
					this.SendPropertyChanged("ID_Documento");
					this.OnID_DocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estensione", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Estensione
		{
			get
			{
				return this._Estensione;
			}
			set
			{
				if ((this._Estensione != value))
				{
					this.OnEstensioneChanging(value);
					this.SendPropertyChanging();
					this._Estensione = value;
					this.SendPropertyChanged("Estensione");
					this.OnEstensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="Real NOT NULL")]
		public float Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directory", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Directory
		{
			get
			{
				return this._Directory;
			}
			set
			{
				if ((this._Directory != value))
				{
					this.OnDirectoryChanging(value);
					this.SendPropertyChanging();
					this._Directory = value;
					this.SendPropertyChanged("Directory");
					this.OnDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Assicurato", DbType="Int NOT NULL")]
		public int ID_Assicurato
		{
			get
			{
				return this._ID_Assicurato;
			}
			set
			{
				if ((this._ID_Assicurato != value))
				{
					this.OnID_AssicuratoChanging(value);
					this.SendPropertyChanging();
					this._ID_Assicurato = value;
					this.SendPropertyChanged("ID_Assicurato");
					this.OnID_AssicuratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incarico", DbType="Int NOT NULL")]
		public int Incarico
		{
			get
			{
				return this._Incarico;
			}
			set
			{
				if ((this._Incarico != value))
				{
					if (this._Incarichi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIncaricoChanging(value);
					this.SendPropertyChanging();
					this._Incarico = value;
					this.SendPropertyChanged("Incarico");
					this.OnIncaricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Incarichi_Documenti", Storage="_Incarichi", ThisKey="Incarico", OtherKey="ID_Incarico", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Incarichi Incarichi
		{
			get
			{
				return this._Incarichi.Entity;
			}
			set
			{
				Incarichi previousValue = this._Incarichi.Entity;
				if (((previousValue != value) 
							|| (this._Incarichi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Incarichi.Entity = null;
						previousValue.Documenti.Remove(this);
					}
					this._Incarichi.Entity = value;
					if ((value != null))
					{
						value.Documenti.Add(this);
						this._Incarico = value.ID_Incarico;
					}
					else
					{
						this._Incarico = default(int);
					}
					this.SendPropertyChanged("Incarichi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Incarichi")]
	public partial class Incarichi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Incarico;
		
		private System.Nullable<int> _ID_Sinistro;
		
		private string _Stato;
		
		private int _Supervisore;
		
		private int _Perito;
		
		private EntitySet<Video_Perizie> _Video_Perizie;
		
		private EntitySet<Documenti> _Documenti;
		
		private EntityRef<Periti> _Periti;
		
		private EntityRef<Supervisori> _Supervisori;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_IncaricoChanging(int value);
    partial void OnID_IncaricoChanged();
    partial void OnID_SinistroChanging(System.Nullable<int> value);
    partial void OnID_SinistroChanged();
    partial void OnStatoChanging(string value);
    partial void OnStatoChanged();
    partial void OnSupervisoreChanging(int value);
    partial void OnSupervisoreChanged();
    partial void OnPeritoChanging(int value);
    partial void OnPeritoChanged();
    #endregion
		
		public Incarichi()
		{
			this._Video_Perizie = new EntitySet<Video_Perizie>(new Action<Video_Perizie>(this.attach_Video_Perizie), new Action<Video_Perizie>(this.detach_Video_Perizie));
			this._Documenti = new EntitySet<Documenti>(new Action<Documenti>(this.attach_Documenti), new Action<Documenti>(this.detach_Documenti));
			this._Periti = default(EntityRef<Periti>);
			this._Supervisori = default(EntityRef<Supervisori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Incarico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Incarico
		{
			get
			{
				return this._ID_Incarico;
			}
			set
			{
				if ((this._ID_Incarico != value))
				{
					this.OnID_IncaricoChanging(value);
					this.SendPropertyChanging();
					this._ID_Incarico = value;
					this.SendPropertyChanged("ID_Incarico");
					this.OnID_IncaricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Sinistro", DbType="Int")]
		public System.Nullable<int> ID_Sinistro
		{
			get
			{
				return this._ID_Sinistro;
			}
			set
			{
				if ((this._ID_Sinistro != value))
				{
					this.OnID_SinistroChanging(value);
					this.SendPropertyChanging();
					this._ID_Sinistro = value;
					this.SendPropertyChanged("ID_Sinistro");
					this.OnID_SinistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stato", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Stato
		{
			get
			{
				return this._Stato;
			}
			set
			{
				if ((this._Stato != value))
				{
					this.OnStatoChanging(value);
					this.SendPropertyChanging();
					this._Stato = value;
					this.SendPropertyChanged("Stato");
					this.OnStatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supervisore", DbType="Int NOT NULL")]
		public int Supervisore
		{
			get
			{
				return this._Supervisore;
			}
			set
			{
				if ((this._Supervisore != value))
				{
					if (this._Supervisori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisoreChanging(value);
					this.SendPropertyChanging();
					this._Supervisore = value;
					this.SendPropertyChanged("Supervisore");
					this.OnSupervisoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perito", DbType="Int NOT NULL")]
		public int Perito
		{
			get
			{
				return this._Perito;
			}
			set
			{
				if ((this._Perito != value))
				{
					if (this._Periti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeritoChanging(value);
					this.SendPropertyChanging();
					this._Perito = value;
					this.SendPropertyChanged("Perito");
					this.OnPeritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Incarichi_Video_Perizie", Storage="_Video_Perizie", ThisKey="ID_Incarico", OtherKey="Incarico")]
		public EntitySet<Video_Perizie> Video_Perizie
		{
			get
			{
				return this._Video_Perizie;
			}
			set
			{
				this._Video_Perizie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Incarichi_Documenti", Storage="_Documenti", ThisKey="ID_Incarico", OtherKey="Incarico")]
		public EntitySet<Documenti> Documenti
		{
			get
			{
				return this._Documenti;
			}
			set
			{
				this._Documenti.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Periti_Incarichi", Storage="_Periti", ThisKey="Perito", OtherKey="ID_Perito", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Periti Periti
		{
			get
			{
				return this._Periti.Entity;
			}
			set
			{
				Periti previousValue = this._Periti.Entity;
				if (((previousValue != value) 
							|| (this._Periti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Periti.Entity = null;
						previousValue.Incarichi.Remove(this);
					}
					this._Periti.Entity = value;
					if ((value != null))
					{
						value.Incarichi.Add(this);
						this._Perito = value.ID_Perito;
					}
					else
					{
						this._Perito = default(int);
					}
					this.SendPropertyChanged("Periti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisori_Incarichi", Storage="_Supervisori", ThisKey="Supervisore", OtherKey="ID_Supervisore", IsForeignKey=true)]
		public Supervisori Supervisori
		{
			get
			{
				return this._Supervisori.Entity;
			}
			set
			{
				Supervisori previousValue = this._Supervisori.Entity;
				if (((previousValue != value) 
							|| (this._Supervisori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisori.Entity = null;
						previousValue.Incarichi.Remove(this);
					}
					this._Supervisori.Entity = value;
					if ((value != null))
					{
						value.Incarichi.Add(this);
						this._Supervisore = value.ID_Supervisore;
					}
					else
					{
						this._Supervisore = default(int);
					}
					this.SendPropertyChanged("Supervisori");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Video_Perizie(Video_Perizie entity)
		{
			this.SendPropertyChanging();
			entity.Incarichi = this;
		}
		
		private void detach_Video_Perizie(Video_Perizie entity)
		{
			this.SendPropertyChanging();
			entity.Incarichi = null;
		}
		
		private void attach_Documenti(Documenti entity)
		{
			this.SendPropertyChanging();
			entity.Incarichi = this;
		}
		
		private void detach_Documenti(Documenti entity)
		{
			this.SendPropertyChanging();
			entity.Incarichi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luoghi")]
	public partial class Luoghi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Luogo;
		
		private string _Provincia;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private string _CAP;
		
		private string _Comune;
		
		private string _Citta;
		
		private EntitySet<Sinistri> _Sinistri;
		
		private EntitySet<Studi_Peritali> _Studi_Peritali;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LuogoChanging(int value);
    partial void OnID_LuogoChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnComuneChanging(string value);
    partial void OnComuneChanged();
    partial void OnCittaChanging(string value);
    partial void OnCittaChanged();
    #endregion
		
		public Luoghi()
		{
			this._Sinistri = new EntitySet<Sinistri>(new Action<Sinistri>(this.attach_Sinistri), new Action<Sinistri>(this.detach_Sinistri));
			this._Studi_Peritali = new EntitySet<Studi_Peritali>(new Action<Studi_Peritali>(this.attach_Studi_Peritali), new Action<Studi_Peritali>(this.detach_Studi_Peritali));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Luogo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Luogo
		{
			get
			{
				return this._ID_Luogo;
			}
			set
			{
				if ((this._ID_Luogo != value))
				{
					this.OnID_LuogoChanging(value);
					this.SendPropertyChanging();
					this._ID_Luogo = value;
					this.SendPropertyChanged("ID_Luogo");
					this.OnID_LuogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comune", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Comune
		{
			get
			{
				return this._Comune;
			}
			set
			{
				if ((this._Comune != value))
				{
					this.OnComuneChanging(value);
					this.SendPropertyChanging();
					this._Comune = value;
					this.SendPropertyChanged("Comune");
					this.OnComuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Citta
		{
			get
			{
				return this._Citta;
			}
			set
			{
				if ((this._Citta != value))
				{
					this.OnCittaChanging(value);
					this.SendPropertyChanging();
					this._Citta = value;
					this.SendPropertyChanged("Citta");
					this.OnCittaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luoghi_Sinistri", Storage="_Sinistri", ThisKey="ID_Luogo", OtherKey="Luogo")]
		public EntitySet<Sinistri> Sinistri
		{
			get
			{
				return this._Sinistri;
			}
			set
			{
				this._Sinistri.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luoghi_Studi_Peritali", Storage="_Studi_Peritali", ThisKey="ID_Luogo", OtherKey="Luogo")]
		public EntitySet<Studi_Peritali> Studi_Peritali
		{
			get
			{
				return this._Studi_Peritali;
			}
			set
			{
				this._Studi_Peritali.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Luoghi = this;
		}
		
		private void detach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Luoghi = null;
		}
		
		private void attach_Studi_Peritali(Studi_Peritali entity)
		{
			this.SendPropertyChanging();
			entity.Luoghi = this;
		}
		
		private void detach_Studi_Peritali(Studi_Peritali entity)
		{
			this.SendPropertyChanging();
			entity.Luoghi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Media")]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroMedia;
		
		private int _NumeroPerizia;
		
		private int _Incarico;
		
		private string _Nome;
		
		private string _Estensione;
		
		private float _Dimensione;
		
		private string _Directory;
		
		private string _Tipo;
		
		private string _Metadati;
		
		private EntityRef<Video_Perizie> _Video_Perizie;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroMediaChanging(int value);
    partial void OnNumeroMediaChanged();
    partial void OnNumeroPeriziaChanging(int value);
    partial void OnNumeroPeriziaChanged();
    partial void OnIncaricoChanging(int value);
    partial void OnIncaricoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEstensioneChanging(string value);
    partial void OnEstensioneChanged();
    partial void OnDimensioneChanging(float value);
    partial void OnDimensioneChanged();
    partial void OnDirectoryChanging(string value);
    partial void OnDirectoryChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnMetadatiChanging(string value);
    partial void OnMetadatiChanged();
    #endregion
		
		public Media()
		{
			this._Video_Perizie = default(EntityRef<Video_Perizie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroMedia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumeroMedia
		{
			get
			{
				return this._NumeroMedia;
			}
			set
			{
				if ((this._NumeroMedia != value))
				{
					this.OnNumeroMediaChanging(value);
					this.SendPropertyChanging();
					this._NumeroMedia = value;
					this.SendPropertyChanged("NumeroMedia");
					this.OnNumeroMediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPerizia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumeroPerizia
		{
			get
			{
				return this._NumeroPerizia;
			}
			set
			{
				if ((this._NumeroPerizia != value))
				{
					if (this._Video_Perizie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroPeriziaChanging(value);
					this.SendPropertyChanging();
					this._NumeroPerizia = value;
					this.SendPropertyChanged("NumeroPerizia");
					this.OnNumeroPeriziaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incarico", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Incarico
		{
			get
			{
				return this._Incarico;
			}
			set
			{
				if ((this._Incarico != value))
				{
					if (this._Video_Perizie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIncaricoChanging(value);
					this.SendPropertyChanging();
					this._Incarico = value;
					this.SendPropertyChanged("Incarico");
					this.OnIncaricoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estensione", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Estensione
		{
			get
			{
				return this._Estensione;
			}
			set
			{
				if ((this._Estensione != value))
				{
					this.OnEstensioneChanging(value);
					this.SendPropertyChanging();
					this._Estensione = value;
					this.SendPropertyChanged("Estensione");
					this.OnEstensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="Real NOT NULL")]
		public float Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directory", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Directory
		{
			get
			{
				return this._Directory;
			}
			set
			{
				if ((this._Directory != value))
				{
					this.OnDirectoryChanging(value);
					this.SendPropertyChanging();
					this._Directory = value;
					this.SendPropertyChanged("Directory");
					this.OnDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadati", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Metadati
		{
			get
			{
				return this._Metadati;
			}
			set
			{
				if ((this._Metadati != value))
				{
					this.OnMetadatiChanging(value);
					this.SendPropertyChanging();
					this._Metadati = value;
					this.SendPropertyChanged("Metadati");
					this.OnMetadatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Perizie_Media", Storage="_Video_Perizie", ThisKey="NumeroPerizia,Incarico", OtherKey="NumeroPerizia,Incarico", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Video_Perizie Video_Perizie
		{
			get
			{
				return this._Video_Perizie.Entity;
			}
			set
			{
				Video_Perizie previousValue = this._Video_Perizie.Entity;
				if (((previousValue != value) 
							|| (this._Video_Perizie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Video_Perizie.Entity = null;
						previousValue.Media.Remove(this);
					}
					this._Video_Perizie.Entity = value;
					if ((value != null))
					{
						value.Media.Add(this);
						this._NumeroPerizia = value.NumeroPerizia;
						this._Incarico = value.Incarico;
					}
					else
					{
						this._NumeroPerizia = default(int);
						this._Incarico = default(int);
					}
					this.SendPropertyChanged("Video_Perizie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Periti")]
	public partial class Periti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Perito;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.DateTime _DataNascita;
		
		private string _Email;
		
		private string _CodiceFiscale;
		
		private string _Telefono;
		
		private int _StudioPeritale;
		
		private EntitySet<Incarichi> _Incarichi;
		
		private EntityRef<Studi_Peritali> _Studi_Peritali;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PeritoChanging(int value);
    partial void OnID_PeritoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnDataNascitaChanging(System.DateTime value);
    partial void OnDataNascitaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnStudioPeritaleChanging(int value);
    partial void OnStudioPeritaleChanged();
    #endregion
		
		public Periti()
		{
			this._Incarichi = new EntitySet<Incarichi>(new Action<Incarichi>(this.attach_Incarichi), new Action<Incarichi>(this.detach_Incarichi));
			this._Studi_Peritali = default(EntityRef<Studi_Peritali>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Perito", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Perito
		{
			get
			{
				return this._ID_Perito;
			}
			set
			{
				if ((this._ID_Perito != value))
				{
					this.OnID_PeritoChanging(value);
					this.SendPropertyChanging();
					this._ID_Perito = value;
					this.SendPropertyChanged("ID_Perito");
					this.OnID_PeritoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date NOT NULL")]
		public System.DateTime DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudioPeritale", DbType="Int NOT NULL")]
		public int StudioPeritale
		{
			get
			{
				return this._StudioPeritale;
			}
			set
			{
				if ((this._StudioPeritale != value))
				{
					if (this._Studi_Peritali.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudioPeritaleChanging(value);
					this.SendPropertyChanging();
					this._StudioPeritale = value;
					this.SendPropertyChanged("StudioPeritale");
					this.OnStudioPeritaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Periti_Incarichi", Storage="_Incarichi", ThisKey="ID_Perito", OtherKey="Perito")]
		public EntitySet<Incarichi> Incarichi
		{
			get
			{
				return this._Incarichi;
			}
			set
			{
				this._Incarichi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Periti", Storage="_Studi_Peritali", ThisKey="StudioPeritale", OtherKey="ID_Studio", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Studi_Peritali Studi_Peritali
		{
			get
			{
				return this._Studi_Peritali.Entity;
			}
			set
			{
				Studi_Peritali previousValue = this._Studi_Peritali.Entity;
				if (((previousValue != value) 
							|| (this._Studi_Peritali.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Studi_Peritali.Entity = null;
						previousValue.Periti.Remove(this);
					}
					this._Studi_Peritali.Entity = value;
					if ((value != null))
					{
						value.Periti.Add(this);
						this._StudioPeritale = value.ID_Studio;
					}
					else
					{
						this._StudioPeritale = default(int);
					}
					this.SendPropertyChanged("Studi_Peritali");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incarichi(Incarichi entity)
		{
			this.SendPropertyChanging();
			entity.Periti = this;
		}
		
		private void detach_Incarichi(Incarichi entity)
		{
			this.SendPropertyChanging();
			entity.Periti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Polizze")]
	public partial class Polizze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Numero;
		
		private string _Assicurazione;
		
		private int _Assicurato;
		
		private System.DateTime _Scadenza;
		
		private decimal _Costo;
		
		private decimal _Massimale;
		
		private string _Tipo;
		
		private EntityRef<Assicurazioni> _Assicurazioni;
		
		private EntityRef<Assicurati> _Assicurati;
		
		private EntityRef<Tipo_Polizze> _Tipo_Polizze;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnAssicurazioneChanging(string value);
    partial void OnAssicurazioneChanged();
    partial void OnAssicuratoChanging(int value);
    partial void OnAssicuratoChanged();
    partial void OnScadenzaChanging(System.DateTime value);
    partial void OnScadenzaChanged();
    partial void OnCostoChanging(decimal value);
    partial void OnCostoChanged();
    partial void OnMassimaleChanging(decimal value);
    partial void OnMassimaleChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Polizze()
		{
			this._Assicurazioni = default(EntityRef<Assicurazioni>);
			this._Assicurati = default(EntityRef<Assicurati>);
			this._Tipo_Polizze = default(EntityRef<Tipo_Polizze>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assicurazione", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Assicurazione
		{
			get
			{
				return this._Assicurazione;
			}
			set
			{
				if ((this._Assicurazione != value))
				{
					if (this._Assicurazioni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssicurazioneChanging(value);
					this.SendPropertyChanging();
					this._Assicurazione = value;
					this.SendPropertyChanged("Assicurazione");
					this.OnAssicurazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assicurato", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Assicurato
		{
			get
			{
				return this._Assicurato;
			}
			set
			{
				if ((this._Assicurato != value))
				{
					if (this._Assicurati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssicuratoChanging(value);
					this.SendPropertyChanging();
					this._Assicurato = value;
					this.SendPropertyChanged("Assicurato");
					this.OnAssicuratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scadenza", DbType="Date NOT NULL")]
		public System.DateTime Scadenza
		{
			get
			{
				return this._Scadenza;
			}
			set
			{
				if ((this._Scadenza != value))
				{
					this.OnScadenzaChanging(value);
					this.SendPropertyChanging();
					this._Scadenza = value;
					this.SendPropertyChanged("Scadenza");
					this.OnScadenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Money NOT NULL")]
		public decimal Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Massimale", DbType="Money NOT NULL")]
		public decimal Massimale
		{
			get
			{
				return this._Massimale;
			}
			set
			{
				if ((this._Massimale != value))
				{
					this.OnMassimaleChanging(value);
					this.SendPropertyChanging();
					this._Massimale = value;
					this.SendPropertyChanged("Massimale");
					this.OnMassimaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					if (this._Tipo_Polizze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurazioni_Polizze", Storage="_Assicurazioni", ThisKey="Assicurazione", OtherKey="Denominazione", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Assicurazioni Assicurazioni
		{
			get
			{
				return this._Assicurazioni.Entity;
			}
			set
			{
				Assicurazioni previousValue = this._Assicurazioni.Entity;
				if (((previousValue != value) 
							|| (this._Assicurazioni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assicurazioni.Entity = null;
						previousValue.Polizze.Remove(this);
					}
					this._Assicurazioni.Entity = value;
					if ((value != null))
					{
						value.Polizze.Add(this);
						this._Assicurazione = value.Denominazione;
					}
					else
					{
						this._Assicurazione = default(string);
					}
					this.SendPropertyChanged("Assicurazioni");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurati_Polizze", Storage="_Assicurati", ThisKey="Assicurato", OtherKey="ID_Assicurato", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Assicurati Assicurati
		{
			get
			{
				return this._Assicurati.Entity;
			}
			set
			{
				Assicurati previousValue = this._Assicurati.Entity;
				if (((previousValue != value) 
							|| (this._Assicurati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assicurati.Entity = null;
						previousValue.Polizze.Remove(this);
					}
					this._Assicurati.Entity = value;
					if ((value != null))
					{
						value.Polizze.Add(this);
						this._Assicurato = value.ID_Assicurato;
					}
					else
					{
						this._Assicurato = default(int);
					}
					this.SendPropertyChanged("Assicurati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Polizze_Polizze", Storage="_Tipo_Polizze", ThisKey="Tipo", OtherKey="Tipo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tipo_Polizze Tipo_Polizze
		{
			get
			{
				return this._Tipo_Polizze.Entity;
			}
			set
			{
				Tipo_Polizze previousValue = this._Tipo_Polizze.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Polizze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Polizze.Entity = null;
						previousValue.Polizze.Remove(this);
					}
					this._Tipo_Polizze.Entity = value;
					if ((value != null))
					{
						value.Polizze.Add(this);
						this._Tipo = value.Tipo;
					}
					else
					{
						this._Tipo = default(string);
					}
					this.SendPropertyChanged("Tipo_Polizze");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sinistri")]
	public partial class Sinistri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Sinistro;
		
		private string _Assicurazione;
		
		private string _Descrizione;
		
		private System.DateTime _Data;
		
		private string _Categoria;
		
		private int _Luogo;
		
		private System.Nullable<int> _StudioPeritale;
		
		private int _Assicurato;
		
		private EntityRef<Luoghi> _Luoghi;
		
		private EntityRef<Categoria_Sinistri> _Categoria_Sinistri;
		
		private EntityRef<Assicurati> _Assicurati;
		
		private EntityRef<Assicurazioni> _Assicurazioni;
		
		private EntityRef<Studi_Peritali> _Studi_Peritali;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SinistroChanging(int value);
    partial void OnID_SinistroChanged();
    partial void OnAssicurazioneChanging(string value);
    partial void OnAssicurazioneChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnLuogoChanging(int value);
    partial void OnLuogoChanged();
    partial void OnStudioPeritaleChanging(System.Nullable<int> value);
    partial void OnStudioPeritaleChanged();
    partial void OnAssicuratoChanging(int value);
    partial void OnAssicuratoChanged();
    #endregion
		
		public Sinistri()
		{
			this._Luoghi = default(EntityRef<Luoghi>);
			this._Categoria_Sinistri = default(EntityRef<Categoria_Sinistri>);
			this._Assicurati = default(EntityRef<Assicurati>);
			this._Assicurazioni = default(EntityRef<Assicurazioni>);
			this._Studi_Peritali = default(EntityRef<Studi_Peritali>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Sinistro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Sinistro
		{
			get
			{
				return this._ID_Sinistro;
			}
			set
			{
				if ((this._ID_Sinistro != value))
				{
					this.OnID_SinistroChanging(value);
					this.SendPropertyChanging();
					this._ID_Sinistro = value;
					this.SendPropertyChanged("ID_Sinistro");
					this.OnID_SinistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assicurazione", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Assicurazione
		{
			get
			{
				return this._Assicurazione;
			}
			set
			{
				if ((this._Assicurazione != value))
				{
					if (this._Assicurazioni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssicurazioneChanging(value);
					this.SendPropertyChanging();
					this._Assicurazione = value;
					this.SendPropertyChanged("Assicurazione");
					this.OnAssicurazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(1000)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					if (this._Categoria_Sinistri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luogo", DbType="Int NOT NULL")]
		public int Luogo
		{
			get
			{
				return this._Luogo;
			}
			set
			{
				if ((this._Luogo != value))
				{
					if (this._Luoghi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLuogoChanging(value);
					this.SendPropertyChanging();
					this._Luogo = value;
					this.SendPropertyChanged("Luogo");
					this.OnLuogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudioPeritale", DbType="Int")]
		public System.Nullable<int> StudioPeritale
		{
			get
			{
				return this._StudioPeritale;
			}
			set
			{
				if ((this._StudioPeritale != value))
				{
					if (this._Studi_Peritali.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudioPeritaleChanging(value);
					this.SendPropertyChanging();
					this._StudioPeritale = value;
					this.SendPropertyChanged("StudioPeritale");
					this.OnStudioPeritaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assicurato", DbType="Int NOT NULL")]
		public int Assicurato
		{
			get
			{
				return this._Assicurato;
			}
			set
			{
				if ((this._Assicurato != value))
				{
					if (this._Assicurati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssicuratoChanging(value);
					this.SendPropertyChanging();
					this._Assicurato = value;
					this.SendPropertyChanged("Assicurato");
					this.OnAssicuratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luoghi_Sinistri", Storage="_Luoghi", ThisKey="Luogo", OtherKey="ID_Luogo", IsForeignKey=true)]
		public Luoghi Luoghi
		{
			get
			{
				return this._Luoghi.Entity;
			}
			set
			{
				Luoghi previousValue = this._Luoghi.Entity;
				if (((previousValue != value) 
							|| (this._Luoghi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Luoghi.Entity = null;
						previousValue.Sinistri.Remove(this);
					}
					this._Luoghi.Entity = value;
					if ((value != null))
					{
						value.Sinistri.Add(this);
						this._Luogo = value.ID_Luogo;
					}
					else
					{
						this._Luogo = default(int);
					}
					this.SendPropertyChanged("Luoghi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Sinistri_Sinistri", Storage="_Categoria_Sinistri", ThisKey="Categoria", OtherKey="Appellativo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Categoria_Sinistri Categoria_Sinistri
		{
			get
			{
				return this._Categoria_Sinistri.Entity;
			}
			set
			{
				Categoria_Sinistri previousValue = this._Categoria_Sinistri.Entity;
				if (((previousValue != value) 
							|| (this._Categoria_Sinistri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria_Sinistri.Entity = null;
						previousValue.Sinistri.Remove(this);
					}
					this._Categoria_Sinistri.Entity = value;
					if ((value != null))
					{
						value.Sinistri.Add(this);
						this._Categoria = value.Appellativo;
					}
					else
					{
						this._Categoria = default(string);
					}
					this.SendPropertyChanged("Categoria_Sinistri");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurati_Sinistri", Storage="_Assicurati", ThisKey="Assicurato", OtherKey="ID_Assicurato", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Assicurati Assicurati
		{
			get
			{
				return this._Assicurati.Entity;
			}
			set
			{
				Assicurati previousValue = this._Assicurati.Entity;
				if (((previousValue != value) 
							|| (this._Assicurati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assicurati.Entity = null;
						previousValue.Sinistri.Remove(this);
					}
					this._Assicurati.Entity = value;
					if ((value != null))
					{
						value.Sinistri.Add(this);
						this._Assicurato = value.ID_Assicurato;
					}
					else
					{
						this._Assicurato = default(int);
					}
					this.SendPropertyChanged("Assicurati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assicurazioni_Sinistri", Storage="_Assicurazioni", ThisKey="Assicurazione", OtherKey="Denominazione", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Assicurazioni Assicurazioni
		{
			get
			{
				return this._Assicurazioni.Entity;
			}
			set
			{
				Assicurazioni previousValue = this._Assicurazioni.Entity;
				if (((previousValue != value) 
							|| (this._Assicurazioni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assicurazioni.Entity = null;
						previousValue.Sinistri.Remove(this);
					}
					this._Assicurazioni.Entity = value;
					if ((value != null))
					{
						value.Sinistri.Add(this);
						this._Assicurazione = value.Denominazione;
					}
					else
					{
						this._Assicurazione = default(string);
					}
					this.SendPropertyChanged("Assicurazioni");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Sinistri", Storage="_Studi_Peritali", ThisKey="StudioPeritale", OtherKey="ID_Studio", IsForeignKey=true, DeleteRule="SET NULL")]
		public Studi_Peritali Studi_Peritali
		{
			get
			{
				return this._Studi_Peritali.Entity;
			}
			set
			{
				Studi_Peritali previousValue = this._Studi_Peritali.Entity;
				if (((previousValue != value) 
							|| (this._Studi_Peritali.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Studi_Peritali.Entity = null;
						previousValue.Sinistri.Remove(this);
					}
					this._Studi_Peritali.Entity = value;
					if ((value != null))
					{
						value.Sinistri.Add(this);
						this._StudioPeritale = value.ID_Studio;
					}
					else
					{
						this._StudioPeritale = default(Nullable<int>);
					}
					this.SendPropertyChanged("Studi_Peritali");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Studi_Peritali")]
	public partial class Studi_Peritali : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Studio;
		
		private string _Nome;
		
		private string _Email;
		
		private string _Telefono;
		
		private int _Luogo;
		
		private EntitySet<Periti> _Periti;
		
		private EntitySet<Sinistri> _Sinistri;
		
		private EntitySet<Supervisori> _Supervisori;
		
		private EntityRef<Luoghi> _Luoghi;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_StudioChanging(int value);
    partial void OnID_StudioChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnLuogoChanging(int value);
    partial void OnLuogoChanged();
    #endregion
		
		public Studi_Peritali()
		{
			this._Periti = new EntitySet<Periti>(new Action<Periti>(this.attach_Periti), new Action<Periti>(this.detach_Periti));
			this._Sinistri = new EntitySet<Sinistri>(new Action<Sinistri>(this.attach_Sinistri), new Action<Sinistri>(this.detach_Sinistri));
			this._Supervisori = new EntitySet<Supervisori>(new Action<Supervisori>(this.attach_Supervisori), new Action<Supervisori>(this.detach_Supervisori));
			this._Luoghi = default(EntityRef<Luoghi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Studio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Studio
		{
			get
			{
				return this._ID_Studio;
			}
			set
			{
				if ((this._ID_Studio != value))
				{
					this.OnID_StudioChanging(value);
					this.SendPropertyChanging();
					this._ID_Studio = value;
					this.SendPropertyChanged("ID_Studio");
					this.OnID_StudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luogo", DbType="Int NOT NULL")]
		public int Luogo
		{
			get
			{
				return this._Luogo;
			}
			set
			{
				if ((this._Luogo != value))
				{
					if (this._Luoghi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLuogoChanging(value);
					this.SendPropertyChanging();
					this._Luogo = value;
					this.SendPropertyChanged("Luogo");
					this.OnLuogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Periti", Storage="_Periti", ThisKey="ID_Studio", OtherKey="StudioPeritale")]
		public EntitySet<Periti> Periti
		{
			get
			{
				return this._Periti;
			}
			set
			{
				this._Periti.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Sinistri", Storage="_Sinistri", ThisKey="ID_Studio", OtherKey="StudioPeritale")]
		public EntitySet<Sinistri> Sinistri
		{
			get
			{
				return this._Sinistri;
			}
			set
			{
				this._Sinistri.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Supervisori", Storage="_Supervisori", ThisKey="ID_Studio", OtherKey="StudioPeritale")]
		public EntitySet<Supervisori> Supervisori
		{
			get
			{
				return this._Supervisori;
			}
			set
			{
				this._Supervisori.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luoghi_Studi_Peritali", Storage="_Luoghi", ThisKey="Luogo", OtherKey="ID_Luogo", IsForeignKey=true)]
		public Luoghi Luoghi
		{
			get
			{
				return this._Luoghi.Entity;
			}
			set
			{
				Luoghi previousValue = this._Luoghi.Entity;
				if (((previousValue != value) 
							|| (this._Luoghi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Luoghi.Entity = null;
						previousValue.Studi_Peritali.Remove(this);
					}
					this._Luoghi.Entity = value;
					if ((value != null))
					{
						value.Studi_Peritali.Add(this);
						this._Luogo = value.ID_Luogo;
					}
					else
					{
						this._Luogo = default(int);
					}
					this.SendPropertyChanged("Luoghi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Periti(Periti entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = this;
		}
		
		private void detach_Periti(Periti entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = null;
		}
		
		private void attach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = this;
		}
		
		private void detach_Sinistri(Sinistri entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = null;
		}
		
		private void attach_Supervisori(Supervisori entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = this;
		}
		
		private void detach_Supervisori(Supervisori entity)
		{
			this.SendPropertyChanging();
			entity.Studi_Peritali = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supervisori")]
	public partial class Supervisori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Supervisore;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.DateTime _DataNascita;
		
		private string _Email;
		
		private string _CodiceFiscale;
		
		private string _Telefono;
		
		private int _StudioPeritale;
		
		private EntitySet<Incarichi> _Incarichi;
		
		private EntityRef<Studi_Peritali> _Studi_Peritali;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SupervisoreChanging(int value);
    partial void OnID_SupervisoreChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnDataNascitaChanging(System.DateTime value);
    partial void OnDataNascitaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnStudioPeritaleChanging(int value);
    partial void OnStudioPeritaleChanged();
    #endregion
		
		public Supervisori()
		{
			this._Incarichi = new EntitySet<Incarichi>(new Action<Incarichi>(this.attach_Incarichi), new Action<Incarichi>(this.detach_Incarichi));
			this._Studi_Peritali = default(EntityRef<Studi_Peritali>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Supervisore", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Supervisore
		{
			get
			{
				return this._ID_Supervisore;
			}
			set
			{
				if ((this._ID_Supervisore != value))
				{
					this.OnID_SupervisoreChanging(value);
					this.SendPropertyChanging();
					this._ID_Supervisore = value;
					this.SendPropertyChanged("ID_Supervisore");
					this.OnID_SupervisoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date NOT NULL")]
		public System.DateTime DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudioPeritale", DbType="Int NOT NULL")]
		public int StudioPeritale
		{
			get
			{
				return this._StudioPeritale;
			}
			set
			{
				if ((this._StudioPeritale != value))
				{
					if (this._Studi_Peritali.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudioPeritaleChanging(value);
					this.SendPropertyChanging();
					this._StudioPeritale = value;
					this.SendPropertyChanged("StudioPeritale");
					this.OnStudioPeritaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisori_Incarichi", Storage="_Incarichi", ThisKey="ID_Supervisore", OtherKey="Supervisore")]
		public EntitySet<Incarichi> Incarichi
		{
			get
			{
				return this._Incarichi;
			}
			set
			{
				this._Incarichi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Studi_Peritali_Supervisori", Storage="_Studi_Peritali", ThisKey="StudioPeritale", OtherKey="ID_Studio", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Studi_Peritali Studi_Peritali
		{
			get
			{
				return this._Studi_Peritali.Entity;
			}
			set
			{
				Studi_Peritali previousValue = this._Studi_Peritali.Entity;
				if (((previousValue != value) 
							|| (this._Studi_Peritali.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Studi_Peritali.Entity = null;
						previousValue.Supervisori.Remove(this);
					}
					this._Studi_Peritali.Entity = value;
					if ((value != null))
					{
						value.Supervisori.Add(this);
						this._StudioPeritale = value.ID_Studio;
					}
					else
					{
						this._StudioPeritale = default(int);
					}
					this.SendPropertyChanged("Studi_Peritali");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incarichi(Incarichi entity)
		{
			this.SendPropertyChanging();
			entity.Supervisori = this;
		}
		
		private void detach_Incarichi(Incarichi entity)
		{
			this.SendPropertyChanging();
			entity.Supervisori = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Polizze")]
	public partial class Tipo_Polizze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tipo;
		
		private string _Descrizione;
		
		private EntitySet<Polizze> _Polizze;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Tipo_Polizze()
		{
			this._Polizze = new EntitySet<Polizze>(new Action<Polizze>(this.attach_Polizze), new Action<Polizze>(this.detach_Polizze));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Polizze_Polizze", Storage="_Polizze", ThisKey="Tipo", OtherKey="Tipo")]
		public EntitySet<Polizze> Polizze
		{
			get
			{
				return this._Polizze;
			}
			set
			{
				this._Polizze.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Polizze = this;
		}
		
		private void detach_Polizze(Polizze entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Polizze = null;
		}
	}
}
#pragma warning restore 1591
